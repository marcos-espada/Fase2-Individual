Param(
    [string]$Param1,
    [string]$Param2
)
Write-Host "Los parámetros son:"$Param1 " " $Param2
pause

 #Función 1. Promocionar a Sudominio
function promocionarSubdominio
{
Write-Host "Ejecuto el comando CD"
}

#Función que nos muestra un menú por pantalla con 3 opciones y una última para salir del mismo
# La función “mostrarMenu”, puede tomar como parámetro un título y devolverá por pantalla 
# "================ $Titulo================" , donde $Titulo será el título pasado por parámetro.
#Si no se le pasa un parámetro, por defecto $Titulo contendrá la cadena 'Selección de opciones'  
#https://technet.microsoft.com/es-es/library/jj554301.aspx
function mostrarMenu 
{ 
     param ( 
           [string]$Titulo = 'Selección de opciones' 
     ) 
     Clear-Host 
     Write-Host "================ $Titulo================" 
      
     
     Write-Host "1) Promocion a Subdomino" 
     Write-Host "2) Despromoción de Subdominio" 
     Write-Host "3) Promocion a dominio en un nuevo bosque"
     Write-Host "4) Despromocionar a dominio en un nuevo bosque"
     Write-Host "5) Comprobar relación de confianza" 
     Write-Host "S) Presiona 'S' para salir" 
}
#Bucle principal del Script. El bucle se ejecuta de manera infinita hasta que se cumple
#la condición until ($input -eq 's'), es decir, hasta que se pulse la tecla s.
do 
{ 
     #Llamamos a la función mostrarMenu, para dibujar el menú de opciones por pantalla
     mostrarMenu 
     #Recogemos en la varaible input, el valor que el usuario escribe por teclado (opción del menú)
     $input = Read-Host "Elegir una Opción" 
     #https://ss64.com/ps/switch.html
     switch ($input) 
     { 
           '1' { 
                Clear-Host  
                'Promocion a Subdomino' 

Import-Module ADDSDeployament
Install-ADDSDomain `
-NoGlobalCatalog:$false `
-CreateDnsDelegation:$true `
-Credential (Get-Credential) `
-DatabasePath "C:\Windows\NTDS" `
-DomainMode "Win2012R2" `
-DomainType "ChildDomain" `
-InstallDns:$true `
-LogPath "C:\Windows\NTDS" `
-NewDomainName "master" `
-NewDomainNetbiosName "MASTER" `
-ParentDomainName "master.local" `
-NoRebootOnCompletion:$false `
-SiteName "Default-First-Site-Name" `
-SysvolPath "C:\Windows\SYSVOL" `
                pause
           } '2' { 
                Clear-Host  
                'Despromoción de Subdominio' 
Import-Module ADDSDeployament
Uninstall-ADDSDomain `
-NoGlobalCatalog:$false `
-CreateDnsDelegation:$true `
-Credential (Get-Credential) `
-DatabasePath "C:\Windows\NTDS" `
-DomainMode "Win2012R2" `
-DomainType "ChildDomain" `
-InstallDns:$true `
-LogPath "C:\Windows\NTDS" `
-NewDomainName "master" `
-NewDomainNetbiosName "MASTER" `
-ParentDomainName "master.local" `
-NoRebootOnCompletion:$false `
-SiteName "Default-First-Site-Name" `
-SysvolPath "C:\Windows\SYSVOL" `
                pause
           } '3' { 
                Clear-Host  
                'Promocion a dominio en un nuevo bosque' 
Import-Module ADDSDeployament
Install-ADDSForest `
-NoGlobalCatalog:$false `
-CreateDnsDelegation:$true `
-Credential (Get-Credential) `
-DatabasePath "C:\Windows\NTDS" `
-DomainMode "Win2012R2" `
-DomainType "ChildDomain" `
-InstallDns:$true `
-LogPath "C:\Windows\NTDS" `
-NewDomainName "master" `
-NewDomainNetbiosName "MASTER" `
-ParentDomainName "master.local" `
-NoRebootOnCompletion:$false `
-SiteName "Default-First-Site-Name" `
-SysvolPath "C:\Windows\SYSVOL" `
                pause
           } '4' {
                'Despromocionar a dominio en un nuevo bosque'
Import-Module ADDSDeployament
Uninstall-ADDSForest `
-NoGlobalCatalog:$false `
-CreateDnsDelegation:$true `
-Credential (Get-Credential) `
-DatabasePath "C:\Windows\NTDS" `
-DomainMode "Win2012R2" `
-DomainType "ChildDomain" `
-InstallDns:$true `
-LogPath "C:\Windows\NTDS" `
-NewDomainName "master" `
-NewDomainNetbiosName "MASTER" `
-ParentDomainName "master.local" `
-NoRebootOnCompletion:$false `
-SiteName "Default-First-Site-Name" `
-SysvolPath "C:\Windows\SYSVOL
                pause

           } '5' {
                'Comprobar relación de confianza'
Fuction New-ADDomainTrust
{  
    Param
    (
        [parameter(Mandatory=$true)]
        [String]$RemoteDomain,
        [parameter(Mandatory=$true)]
        [String]$RemoteAdmin,
        [parameter(Mandatory=$true)]
        [String]$RemotePassworld,
        [parameter(Mandatory=$true)]
        [Validaset("Inboud", "Outbound", "Bidirectional")]
        [String]$TrustDirection
    )
    
    $remoteConnention - New Object System,DirectoryServices,ActiveDirectory,DirectoryContext('Domain' $RemoteDomain,$RemoteAdmin,RemotePassword)
    $remoteDomainConnention - [System,DirectoryServices,ActiveDirectory,Domain]::GetCurrentDomain()
    $localDomain.CreateTrustRelationship($remoteDomainConnection,$TrustDirection)
}
                pause
           } 's' {
                'Saliendo del script...'
                return 
           } 
           #Si no se selecciona una de las opciones del menú, es decir, se pulsa algun carácter
           #que no sea 1, 2, 3, 4, 5 o s, sacamos por pantalla un aviso e indicamos lo que hay que realizar.
           default { 
              'Por favor, Pulse una de las opciones disponibles [1-5] o s para salir'
           }
     } 
     pause 
} 
until ($input -eq 's')
